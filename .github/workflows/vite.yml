# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Frontend CI/CD

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    build-and-deploy-frontend:
        name: Build and Deploy Frontend
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'
                  cache-dependency-path: frontend/package-lock.json

            - name: Install dependencies
              working-directory: ./frontend
              run: npm ci

            - name: Build src
              id: build
              working-directory: ./frontend
              env:
                  VITE_GITHUB_LINK: https://github.com/Jeffery-Fang/ValoGraphs
                  VITE_API_URL: https://api.valographs.com/players/
              run: npm run build --if-present

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
                  aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
                  aws-region: ca-central-1

            - name: Deploy to AWS S3
              if: steps.build.outcome == 'success'
              working-directory: ./frontend
              run: aws s3 sync ./dist/. s3://my-vg-frontend/

            - name: Invalidate old files in CDN
              if: steps.build.outcome == 'success'
              working-directory: ./frontend
              run: aws cloudfront --region ca-central-1 create-invalidation --distribution-id E3HWFTOJ0FPTAE --paths "/*"
